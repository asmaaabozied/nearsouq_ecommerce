<?php

namespace App\Http\Controllers\Dashboard;


use App\DataTables\OptionDatatables;
use App\Models\Option;
use App\Models\Variant;
use Illuminate\Support\Facades\Session;
use Illuminate\Support\Str;
use Lang;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\Storage;
use Illuminate\Validation\Rule;
use Intervention\Image\Facades\Image;
use Illuminate\Database\QueryException;
use Hash;

class OptionController extends Controller
{

    /*----------------------------------------------------
    || Name     : show all options                     |
      || Tested   : Done                                    |
    || using  : datatables                                      |
       ||                                    |
           -----------------------------------------------------*/
    public function index(OptionDatatables $optionDatatables)
    {


        return $optionDatatables->render('dashboard.datatable', [
            'title' => trans('site.options'),
            'model' => 'options',
            'count' => $optionDatatables->count()
        ]);
    }//end of index


    /*----------------------------------------------------
   || Name     : open pages create                     |
   || Tested   : Done                                    |
   ||                                     |
    ||                                    |
    -----------------------------------------------------*/
    function str_random($length = 4)
    {
        return Str::random($length);
    }

    function str_slug($title, $separator = '-', $language = 'en')
    {
        return Str::slug($title, $separator, $language);
    }

    public
    function create()
    {
        return view('dashboard.options.create');

    }//end of create


    /*----------------------------------------------------
  || Name     : store data into database Option          |
 || Tested   : Done                                    |
   ||                                     |
    ||                                    |
        -----------------------------------------------------*/

    public function show($id){
        $option = Option::find($id);

        $result = $option->delete();

        if ($result) {
            session()->flash('success', __('site.deleted_successfully'));
        }
        return back();

    }

    public
    function store(Request $request)
    {

        $shop_id = Session::get('shop_id') ?? '';


        $option = Option::create($request->except('_token', '_method', 'vname_ar', 'vname_en', 'extra_price', 'images') + ['shop_id' => $shop_id]);
        foreach ($request->vname_ar as $key => $value) {


            $variant = Variant::create([
                'name_ar' => $request['vname_ar'][$key],
                'name_en' => $request['vname_en'][$key],
                'extra_price' => $request['extra_price'][$key],
                'option_id' => $option->id


            ]);
            if ($request->file('images')) {

                $imagess = $request->file('images');


                // foreach ($imagess as $image) {


                $destinationPath = 'uploads/shops/options/';
                $extension = $request['images'][$key]->getClientOriginalExtension(); // getting image extension
                $name = time() . '' . rand(11111, 99999) . '.' . $extension; // renameing image
                $request['images'][$key]->move($destinationPath, $name); // uploading file to given
                $variant->image = $name;

                $variant->save();

                // }

            }


        }





        if ($option) {
            session()->flash('success', __('site.added_successfully'));

        }


        return redirect(route('dashboard.options.index'));
    }


    /*----------------------------------------------------
    || Name     : redirect to edit pages          |
    || Tested   : Done                                    |
    ||                                     |
   ||                                    |
     -----------------------------------------------------*/


    public
    function edit($id)
    {
        $option = Option::find($id);


        return view('dashboard.options.edit', compact('option'));

    }

    /*----------------------------------------------------
   || Name     : update data into database using Option        |
   || Tested   : Done                                    |
     ||                                     |
      ||                                    |
         -----------------------------------------------------*/

    public function update($id, Request $request)
    {
        $option = Option::find($id);
        $result = $option->update($request->except('_token', '_method', 'vname_ar', 'vname_en', 'extra_price', 'images'));

        if (!empty($request->vname_ar)) {
            Variant::where('option_id', $option->id)->delete();

            foreach ($request->vname_ar as $key => $value) {


                $variant = Variant::create([
                    'name_ar' => $request['vname_ar'][$key],
                    'name_en' => $request['vname_en'][$key],
                    'extra_price' => $request['extra_price'][$key],
                    'option_id' => $option->id


                ]);
            }


            if ($request->file('images')) {

                $imagess = $request->file('images');


                foreach ($imagess as $image) {
//                    $img = "";
//                    $img = $this->str_random(4) . $images->getClientOriginalName();
//                    $originname = time() . '.' . $images->getClientOriginalName();
//                    $filename = $this->str_slug(pathinfo($originname, PATHINFO_FILENAME), "-");
//                    $filename = $images;
//                    $extention = pathinfo($originname, PATHINFO_EXTENSION);
//                    $img = $filename;
//
//
//                    $destintion = 'uploads/shops/options';
//                    $images->move($destintion, $img);

                    $destinationPath = 'uploads/shops/options/';
                    $extension = $image->getClientOriginalExtension(); // getting image extension
                    $name = time() . '' . rand(11111, 99999) . '.' . $extension; // renameing image
                    $image->move($destinationPath, $name); // uploading file to given
                    $variant->image = $name;

                    $variant->save();

                }

//            foreach ($request->vname_ar as $key=>$value){
//                $variant->image = $request->file('images')[$key];
//                $variant->save();
//
//            }
            }


        }


        if ($result) {
            session()->flash('success', __('site.updated_successfully'));
        } else {
            session()->flash('error', __('site.update_faild'));
        }

        return redirect(route('dashboard.options.index'));

    }


    /*----------------------------------------------------
   || Name     : delete data into database using Option        |
   || Tested   : Done                                    |
   ||                                     |
   ||                                    |
     -----------------------------------------------------*/

    public
    function destroy($id)
    {
        $res = Variant::where('option_id', $id)->delete();

        $option = Option::find($id);

        $result = $option->delete();

        if ($result) {
            session()->flash('success', __('site.deleted_successfully'));
        } else {
            session()->flash('error', __('site.delete_faild'));
        }
        return back();

    }//end of destroy


}//end of controller
